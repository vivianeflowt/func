0b66d93162a434c05f2819f6f6d5bfa7
"use strict";

/* istanbul ignore next */
function cov_291p3599l8() {
  var path = "/media/vivi/gurudavivi/PIXY/pixy-fn/src/lib/rename-keys.ts";
  var hash = "51d04f99a6c57cf4ea2f2bc46fd5e75624dc3ac8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/media/vivi/gurudavivi/PIXY/pixy-fn/src/lib/rename-keys.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 4,
          column: 13
        },
        end: {
          line: 4,
          column: 33
        }
      },
      "3": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 11,
          column: 93
        }
      },
      "4": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 11,
          column: 92
        }
      },
      "5": {
        start: {
          line: 6,
          column: 31
        },
        end: {
          line: 11,
          column: 92
        }
      },
      "6": {
        start: {
          line: 6,
          column: 92
        },
        end: {
          line: 11,
          column: 5
        }
      },
      "7": {
        start: {
          line: 11,
          column: 49
        },
        end: {
          line: 11,
          column: 73
        }
      },
      "8": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "9": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "renameKeys",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 19
          }
        },
        loc: {
          start: {
            line: 5,
            column: 29
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 12
          }
        },
        loc: {
          start: {
            line: 6,
            column: 22
          },
          end: {
            line: 11,
            column: 92
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 6,
            column: 22
          },
          end: {
            line: 6,
            column: 23
          }
        },
        loc: {
          start: {
            line: 6,
            column: 31
          },
          end: {
            line: 11,
            column: 92
          }
        },
        line: 6
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 6,
            column: 74
          },
          end: {
            line: 6,
            column: 75
          }
        },
        loc: {
          start: {
            line: 6,
            column: 92
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 6
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 11,
            column: 25
          },
          end: {
            line: 11,
            column: 26
          }
        },
        loc: {
          start: {
            line: 11,
            column: 49
          },
          end: {
            line: 11,
            column: 73
          }
        },
        line: 11
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 7,
            column: 8
          },
          end: {
            line: 9,
            column: 17
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 8,
            column: 14
          },
          end: {
            line: 8,
            column: 46
          }
        }, {
          start: {
            line: 9,
            column: 14
          },
          end: {
            line: 9,
            column: 17
          }
        }],
        line: 7
      },
      "1": {
        loc: {
          start: {
            line: 7,
            column: 8
          },
          end: {
            line: 7,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 8
          },
          end: {
            line: 7,
            column: 41
          }
        }, {
          start: {
            line: 7,
            column: 45
          },
          end: {
            line: 7,
            column: 101
          }
        }],
        line: 7
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "51d04f99a6c57cf4ea2f2bc46fd5e75624dc3ac8"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_291p3599l8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_291p3599l8();
cov_291p3599l8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_291p3599l8().s[1]++;
exports.renameKeys = void 0;
const fp_1 =
/* istanbul ignore next */
(cov_291p3599l8().s[2]++, require("lodash/fp"));

function renameKeys(...from) {
  /* istanbul ignore next */
  cov_291p3599l8().f[0]++;
  cov_291p3599l8().s[3]++;
  return (...to) => {
    /* istanbul ignore next */
    cov_291p3599l8().f[1]++;
    cov_291p3599l8().s[4]++;
    return (obj) => {
      /* istanbul ignore next */
      cov_291p3599l8().f[2]++;
      cov_291p3599l8().s[5]++;
      return (0, fp_1.pipe)(fp_1.entries, (0, fp_1.map)(([key, value]) => {
        /* istanbul ignore next */
        cov_291p3599l8().f[3]++;
        cov_291p3599l8().s[6]++;
        return [
        /* istanbul ignore next */
        (cov_291p3599l8().b[1][0]++, (0, fp_1.indexOf)(key)(from) >= 0) &&
        /* istanbul ignore next */
        (cov_291p3599l8().b[1][1]++, !(0, fp_1.isUndefined)(to[(0, fp_1.indexOf)(key)(from)])) ?
        /* istanbul ignore next */
        (cov_291p3599l8().b[0][0]++, to[(0, fp_1.indexOf)(key)(from)]) :
        /* istanbul ignore next */
        (cov_291p3599l8().b[0][1]++, key), value];
      }), (0, fp_1.reduce)((acc, [key, value]) => {
        /* istanbul ignore next */
        cov_291p3599l8().f[4]++;
        cov_291p3599l8().s[7]++;
        return { ...acc,
          [key]: value
        };
      }, {}))({ ...obj
      });
    };
  };
}

/* istanbul ignore next */
cov_291p3599l8().s[8]++;
exports.renameKeys = renameKeys;

/* istanbul ignore next */
cov_291p3599l8().s[9]++;
exports.default = renameKeys;