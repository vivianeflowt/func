1e633823efa09803055f6f0e9d614780
"use strict";

/* istanbul ignore next */
function cov_2ag1uqohqe() {
  var path = "/media/vivi/gurudavivi/PIXY/pixy-fn/src/lib/split-by-word.ts";
  var hash = "422def61d81345b48cc99bf476d08b457f0d9260";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/media/vivi/gurudavivi/PIXY/pixy-fn/src/lib/split-by-word.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 29
        }
      },
      "2": {
        start: {
          line: 4,
          column: 13
        },
        end: {
          line: 4,
          column: 33
        }
      },
      "3": {
        start: {
          line: 12,
          column: 22
        },
        end: {
          line: 12,
          column: 57
        }
      },
      "4": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 51
        }
      },
      "5": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "6": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "splitByWord",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 20
          }
        },
        loc: {
          start: {
            line: 11,
            column: 26
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 11
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "422def61d81345b48cc99bf476d08b457f0d9260"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ag1uqohqe = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2ag1uqohqe();
cov_2ag1uqohqe().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2ag1uqohqe().s[1]++;
exports.splitByWord = void 0;
const fp_1 =
/* istanbul ignore next */
(cov_2ag1uqohqe().s[2]++, require("lodash/fp"));
/**
 * Split each word of the string
 * @category String
 * @param {string} str
 * @returns {string[]}
 */

function splitByWord(str) {
  /* istanbul ignore next */
  cov_2ag1uqohqe().f[0]++;
  const wordRegex =
  /* istanbul ignore next */
  (cov_2ag1uqohqe().s[3]++, /[A-Z]?[a-z]+|\d+|[A-Z]+(?![a-z])/g);

  /* istanbul ignore next */
  cov_2ag1uqohqe().s[4]++;
  return (0, fp_1.toArray)(str.match(wordRegex));
}

/* istanbul ignore next */
cov_2ag1uqohqe().s[5]++;
exports.splitByWord = splitByWord;

/* istanbul ignore next */
cov_2ag1uqohqe().s[6]++;
exports.default = splitByWord;