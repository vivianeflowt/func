cd278f6f76d2366fe9e634ef45ad179c
"use strict";

/* istanbul ignore next */
function cov_zfnat88iw() {
  var path = "/media/vivi/gurudavivi/PIXY/pixy-fn/src/lib/shuffle-list.ts";
  var hash = "94241a9489da3829f8cef2a2e1de8e5ef783ca76";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/media/vivi/gurudavivi/PIXY/pixy-fn/src/lib/shuffle-list.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 29
        }
      },
      "2": {
        start: {
          line: 4,
          column: 26
        },
        end: {
          line: 4,
          column: 30
        }
      },
      "3": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 33
        }
      },
      "4": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 48
        }
      },
      "5": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "6": {
        start: {
          line: 9,
          column: 27
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "7": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 34
        }
      },
      "8": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "shuffleList",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 20
          }
        },
        loc: {
          start: {
            line: 5,
            column: 27
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 13
          },
          end: {
            line: 7,
            column: 14
          }
        },
        loc: {
          start: {
            line: 7,
            column: 24
          },
          end: {
            line: 7,
            column: 48
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 8,
            column: 14
          },
          end: {
            line: 8,
            column: 15
          }
        },
        loc: {
          start: {
            line: 8,
            column: 24
          },
          end: {
            line: 8,
            column: 39
          }
        },
        line: 8
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 9,
            column: 13
          },
          end: {
            line: 9,
            column: 14
          }
        },
        loc: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 9,
            column: 31
          }
        },
        line: 9
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "94241a9489da3829f8cef2a2e1de8e5ef783ca76"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_zfnat88iw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_zfnat88iw();
cov_zfnat88iw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_zfnat88iw().s[1]++;
exports.shuffleList = void 0;
const {
  random,
  floor
} =
/* istanbul ignore next */
(cov_zfnat88iw().s[2]++, Math);

function shuffleList(list) {
  /* istanbul ignore next */
  cov_zfnat88iw().f[0]++;
  cov_zfnat88iw().s[3]++;
  return [...list].map((item) => {
    /* istanbul ignore next */
    cov_zfnat88iw().f[1]++;
    cov_zfnat88iw().s[4]++;
    return {
      item,
      sort: random()
    };
  }).sort((a, b) => {
    /* istanbul ignore next */
    cov_zfnat88iw().f[2]++;
    cov_zfnat88iw().s[5]++;
    return a.sort - b.sort;
  }).map(({
    item
  }) => {
    /* istanbul ignore next */
    cov_zfnat88iw().f[3]++;
    cov_zfnat88iw().s[6]++;
    return item;
  });
}

/* istanbul ignore next */
cov_zfnat88iw().s[7]++;
exports.shuffleList = shuffleList;

/* istanbul ignore next */
cov_zfnat88iw().s[8]++;
exports.default = shuffleList;